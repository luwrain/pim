
package org.luwrain.pim.contacts;

import java.util.*;
import java.sql.*;

import org.luwrain.core.Registry;

class ContactsStoringSql extends ContactsStoringRegistry
{
    private Connection con;

    public ContactsStoringSql(Registry registry, Connection con)
    {
	super(registry);
	this.con = con;
	if (con == null)
	    throw new NullPointerException("con may not be null");
    }

    @Override public StoredContact[] getContacts(StoredContactsFolder folder) throws Exception
    {
	return new StoredContact[0];
    }

    @Override public void saveContact(StoredContactsFolder folder, Contact contact) throws Exception
    {
	if (folder == null)
	    throw new NullPointerException("folder may not be null");
	if (contact != null)
	    throw new NullPointerException("contact may not be null");
	if (!(folder instanceof StoredContactsFolderRegistry))
	    throw new NullPointerException("folder must be an instance of StoredContactsFolderRegistry");
	final StoredContactsFolderRegistry folderRegistry = (StoredContactsFolderRegistry)folder;
    	PreparedStatement st = con.prepareStatement(
						    "INSERT INTO contacts (contacts_folder_id,title,notes) VALUES (?,?,?)",
						    Statement.RETURN_GENERATED_KEYS);
	st.setLong(1, folderRegistry.id);
	st.setString(2, contact.title);
	st.setString(3, contact.notes);
	if (st.executeUpdate() != 1)
	    throw new Exception("Unable to execute initial INSERT query");
	final ResultSet generatedKeys = st.getGeneratedKeys();
	if (!generatedKeys.next()) 
	    throw new Exception("No autogenerated key");
	final long generatedKey = generatedKeys.getLong(1);
	if (contact.values != null)
	    for(ContactValue value: contact.values)
	    {
		st = con.prepareStatement(
					  "INSERT INTO contact_value (contact_id,type_id,value,preferable) VALUES (?,?,?,?)"
					  );
		st.setLong(1, generatedKey);
		st.setInt(2, value.type);
		st.setString(3, value.value);
		st.setBoolean(4, value.preferable);
		st.executeUpdate();
	    }
    }

    @Override public void deleteContact(StoredContact contact) throws Exception
    {
    }
}
